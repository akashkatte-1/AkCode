{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: userData => api.put('/auth/profile', userData)\n};\n\n// Problems API\nexport const problemsAPI = {\n  getAll: params => api.get('/problems', {\n    params\n  }),\n  getBySlug: slug => api.get(`/problems/${slug}`),\n  create: problemData => api.post('/problems', problemData),\n  update: (id, problemData) => api.put(`/problems/${id}`, problemData),\n  delete: id => api.delete(`/problems/${id}`),\n  getTags: () => api.get('/problems/tags')\n};\n\n// Submissions API\nexport const submissionsAPI = {\n  submit: submissionData => api.post('/submissions/submit', submissionData),\n  run: codeData => api.post('/submissions/run', codeData),\n  getUserSubmissions: params => api.get('/submissions/user', {\n    params\n  }),\n  getById: id => api.get(`/submissions/${id}`)\n};\n\n// Leaderboard API\nexport const leaderboardAPI = {\n  get: params => api.get('/leaderboard', {\n    params\n  }),\n  getUserRank: () => api.get('/leaderboard/rank'),\n  getTopPerformers: params => api.get('/leaderboard/top', {\n    params\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","register","userData","post","login","credentials","getProfile","get","updateProfile","put","problemsAPI","getAll","params","getBySlug","slug","problemData","update","id","delete","getTags","submissionsAPI","submit","submissionData","run","codeData","getUserSubmissions","getById","leaderboardAPI","getUserRank","getTopPerformers"],"sources":["C:/Users/Vaishnavi1/Desktop/InternLab_internship/project/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: (userData) => api.put('/auth/profile', userData),\n};\n\n// Problems API\nexport const problemsAPI = {\n  getAll: (params) => api.get('/problems', { params }),\n  getBySlug: (slug) => api.get(`/problems/${slug}`),\n  create: (problemData) => api.post('/problems', problemData),\n  update: (id, problemData) => api.put(`/problems/${id}`, problemData),\n  delete: (id) => api.delete(`/problems/${id}`),\n  getTags: () => api.get('/problems/tags'),\n};\n\n// Submissions API\nexport const submissionsAPI = {\n  submit: (submissionData) => api.post('/submissions/submit', submissionData),\n  run: (codeData) => api.post('/submissions/run', codeData),\n  getUserSubmissions: (params) => api.get('/submissions/user', { params }),\n  getById: (id) => api.get(`/submissions/${id}`),\n};\n\n// Leaderboard API\nexport const leaderboardAPI = {\n  get: (params) => api.get('/leaderboard', { params }),\n  getUserRank: () => api.get('/leaderboard/rank'),\n  getTopPerformers: (params) => api.get('/leaderboard/top', { params }),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}