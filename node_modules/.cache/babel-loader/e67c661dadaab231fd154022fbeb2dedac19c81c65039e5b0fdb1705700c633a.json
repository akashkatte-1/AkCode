{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi1\\\\Desktop\\\\InternLab_internship\\\\project\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user data\n      authAPI.getProfile().then(response => {\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n      }).catch(() => {\n        // Token is invalid, remove it\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      const {\n        user: userData,\n        token\n      } = response.data;\n      setUser(userData);\n      setIsAuthenticated(true);\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      toast.success('ðŸŽ‰ Welcome back! Login successful!');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(message);\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await authAPI.register({\n        username,\n        email,\n        password\n      });\n      const {\n        user: userData,\n        token\n      } = response.data;\n      setUser(userData);\n      setIsAuthenticated(true);\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      toast.success('ðŸŽ‰ Welcome to CodePlatform! Registration successful!');\n\n      // Show additional welcome message\n      setTimeout(() => {\n        toast.success('ðŸš€ Ready to start coding? Explore our problems section!', {\n          duration: 4000\n        });\n      }, 1000);\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      toast.error(message);\n      console.error('Registration error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    toast.success('Logged out successfully');\n  };\n  const updateUser = async updates => {\n    try {\n      const response = await authAPI.updateProfile(updates);\n      const updatedUser = response.data.user;\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      toast.success('Profile updated successfully');\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Update failed';\n      toast.error(message);\n      return false;\n    }\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin',\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","authAPI","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","getProfile","then","response","data","catch","removeItem","finally","login","email","password","userData","setItem","JSON","stringify","success","error","_error$response","_error$response$data","message","console","register","username","setTimeout","duration","_error$response2","_error$response2$data","logout","updateUser","updates","updateProfile","updatedUser","_error$response3","_error$response3$data","value","isAdmin","role","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Vaishnavi1/Desktop/InternLab_internship/project/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user data\n      authAPI.getProfile()\n        .then(response => {\n          setUser(response.data.user);\n          setIsAuthenticated(true);\n        })\n        .catch(() => {\n          // Token is invalid, remove it\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login({ email, password });\n      const { user: userData, token } = response.data;\n      \n      setUser(userData);\n      setIsAuthenticated(true);\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      toast.success('ðŸŽ‰ Welcome back! Login successful!');\n      return true;\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      toast.error(message);\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      const response = await authAPI.register({ username, email, password });\n      const { user: userData, token } = response.data;\n      \n      setUser(userData);\n      setIsAuthenticated(true);\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      toast.success('ðŸŽ‰ Welcome to CodePlatform! Registration successful!');\n      \n      // Show additional welcome message\n      setTimeout(() => {\n        toast.success('ðŸš€ Ready to start coding? Explore our problems section!', {\n          duration: 4000,\n        });\n      }, 1000);\n      \n      return true;\n    } catch (error) {\n      const message = error.response?.data?.error || 'Registration failed';\n      toast.error(message);\n      console.error('Registration error:', error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    toast.success('Logged out successfully');\n  };\n\n  const updateUser = async (updates) => {\n    try {\n      const response = await authAPI.updateProfile(updates);\n      const updatedUser = response.data.user;\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      toast.success('Profile updated successfully');\n      return true;\n    } catch (error) {\n      const message = error.response?.data?.error || 'Update failed';\n      toast.error(message);\n      return false;\n    }\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated,\n    isAdmin: user?.role === 'admin',\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}