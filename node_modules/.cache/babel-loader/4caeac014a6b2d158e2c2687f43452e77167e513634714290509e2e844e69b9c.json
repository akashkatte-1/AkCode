{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi1\\\\Desktop\\\\InternLab_internship\\\\project\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDark, setIsDark] = useState(false);\n  useEffect(() => {\n    // Check if user has a theme preference\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDark(savedTheme === 'dark');\n    } else {\n      // Check system preference\n      setIsDark(window.matchMedia('(prefers-color-scheme: dark)').matches);\n    }\n  }, []);\n  useEffect(() => {\n    // Update document class and localStorage\n    if (isDark) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [isDark]);\n  const toggleTheme = () => {\n    setIsDark(!isDark);\n  };\n  const value = {\n    isDark,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"MY+3NvjXsBPnKBBvoV1wuj6EAdg=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDark","setIsDark","savedTheme","localStorage","getItem","window","matchMedia","matches","document","documentElement","classList","add","setItem","remove","toggleTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Vaishnavi1/Desktop/InternLab_internship/project/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user has a theme preference\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme) {\r\n      setIsDark(savedTheme === 'dark');\r\n    } else {\r\n      // Check system preference\r\n      setIsDark(window.matchMedia('(prefers-color-scheme: dark)').matches);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Update document class and localStorage\r\n    if (isDark) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  }, [isDark]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const value = {\r\n    isDark,\r\n    toggleTheme\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdD,SAAS,CAACC,UAAU,KAAK,MAAM,CAAC;IAClC,CAAC,MAAM;MACL;MACAD,SAAS,CAACI,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAAC;IACtE;EACF,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,MAAM,EAAE;MACVQ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CR,YAAY,CAACS,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;MACjDV,YAAY,CAACS,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;EAEZ,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBb,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMe,KAAK,GAAG;IACZf,MAAM;IACNc;EACF,CAAC;EAED,oBACEnB,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EACjCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACrB,EAAA,CAvCWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAyC1B,OAAO,MAAMyB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGjC,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAAC4B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}